Features1 = dlmread('ColonCancer_PCA.txt');
%Features1 = dlmread('Less_Features.txt');
Features1 = Features1(:,1 :34);
Labels1 = dlmread('ColonCancerLabels.txt');
[New_Labels , New_Matrix] = Read_Matrix(Labels1,Features1);
[Training_Set_Cancer , Training_Set_Normal  ,Testing_Set  ,Label_Vector , Testing_Label] = Data_Preprocessing( New_Matrix , New_Labels');
Training_Set = [Training_Set_Cancer ; Training_Set_Normal];
Labels1 = dlmread('ColonCancerLabels.txt');
TestCase1  = Read_data('D:\TC1.txt');
TestCase2  = Read_data('D:\TC2.txt');
TestCase3  = Read_data('D:\TC3.txt');
Processed_data = load('Selectedvectors.mat');
Processed_data = Processed_data.eign_vectors_Selected;
eign_val = Processed_data(:,1:34);
Mean_data = load('Mean_Matrix.mat');
Mean_data = Mean_data.Mean_Matrix;
Mean_Substracted = bsxfun(@minus,TestCase1,Mean_data);
Mean_Substracted1 = bsxfun(@minus,TestCase2,Mean_data);
Mean_Substracted2 = bsxfun(@minus,TestCase3,Mean_data);
Test1 = Mean_Substracted*eign_val;
Test2 = Mean_Substracted1*eign_val;
Test3 = Mean_Substracted1*eign_val;
TestSet =[Test1;Test2];
TestSet = [TestSet; Test3];
%Built in Bayes
O1 = fitNaiveBayes(Training_Set,Label_Vector);
C1 = O1.predict(TestSet);
[BayesBUuiltin_Accuracy , BayesBuiltin_Confusion_Matrix] = Total_Accuracy(Testing_Label , C1);
